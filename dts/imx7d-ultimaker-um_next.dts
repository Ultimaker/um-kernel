/*
 * Copyright 2017 - Ultimaker B.V.
 * Author Olliver Schinagl <oliver@schinagl.nl>
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This file is free software; you can redistribute it and/or
 *     modify it under the terms of the GNU General Public License as
 *     published by the Free Software Foundation; either version 2 of the
 *     License, or (at your option) any later version.
 *
 *     This file is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 * Or, alternatively,
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */

#include "imx7d-colibri-eval-v3.dts"

#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>
#include <dt-bindings/pwm/pwm.h>

/ {
	model = "Ultimaker NeXT Toradex Colibri iMX7D on Colibri Evaluation Board v3 (9066-4098)";
	compatible = "ultimaker,9066-4098", "toradex,colibri-imx7d-eval-v3",
		     "toradex,colibri-imx7d", "fsl,imx7d";


	beeper {
		pwm-names ="opinicus-board-beeper";
		compatible = "pwm-beeper";
		pwms = <&pwm1 0 500000 0>;
		status = "okay";
	};

	button_wheel {
		pinctrl-names = "default";
		pinctrl-0 = <&button_wheel_pins_a>;
		compatible = "rotary-encoder";
		gpios = <&gpio2 26 GPIO_ACTIVE_LOW>, <&gpio2 28 GPIO_ACTIVE_LOW>;
		linux,axis = <8>; /* REL_Z */
		rotary-encoder,relative-axis;
		rotary-encoder,steps-per-period = <4>;
		status = "okay";
	};

	button_center {
		pinctrl-names = "default";
		pinctrl-0 = <&button_center_pins_a>;
		compatible = "gpio-keys";
		status = "okay";

		button_enter {
			label = "Button ring enter";
			gpios = <&gpio2 15 GPIO_ACTIVE_LOW>;
			linux,code = <KEY_ENTER>;
			wakeup-source;
		};
	};
};

&bl {
	/delete-property/ compatible;
	/delete-property/ pwms;
};

&ecspi3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi3>, <&pinctrl_ecspi3_cs>;
	cs-gpios = <&gpio4 11 GPIO_ACTIVE_LOW>;
	status = "okay";

	spidev@0 {
		compatible = "linux,spidev";
		spi-max-frequency = <50000000>;
		reg = <0>;
	};	
};

&iomuxc {
	/delete-node/ pinctrl_gpio1;
	/delete-node/ pinctrl_gpio2;
	/delete-node/ pinctrl_uart2;

	rtos_reset_pins: rtosresetgrp {
		fsl,pins = <
			MX7D_PAD_EPDC_DATA10__GPIO2_IO10	0x0014
		>;
	};

	display_reset_pins: displayresetgrp {
		fsl,pins = <
			MX7D_PAD_EPDC_SDCE2__GPIO2_IO22		0x0014
		>;
	};

	button_wheel_pins_a: butwheelgrp {
		fsl,pins = <
			MX7D_PAD_EPDC_BDR0__GPIO2_IO28		0x0054
			MX7D_PAD_EPDC_GDRL__GPIO2_IO26		0x0054
		>;
	};

	button_center_pins_a: butcentgrp {
		fsl,pins = <
			MX7D_PAD_EPDC_DATA15__GPIO2_IO15	0x0054
		>;
	};

	i2c2_pins_a: i2c2grp {
		fsl,pins = <
			MX7D_PAD_UART2_TX_DATA__I2C2_SDA	0x40000057
			MX7D_PAD_UART2_RX_DATA__I2C2_SCL	0x40000057
		>;
	};

	i2c3_pins_a: i2c3grp {
		fsl,pins = <
			MX7D_PAD_I2C3_SCL__I2C3_SCL		0x4000003f
			MX7D_PAD_I2C3_SDA__I2C3_SDA		0x4000003f
		>;
	};
};

&i2c2 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c2_pins_a>;
	status = "okay";
	clock-frequency = <400000>;

	ssd1309@3c {
		compatible = "solomon,ssd1309fb-i2c";
		pinctrl-names = "default";
		pinctrl-0 = <&display_reset_pins>;
		reg = <0x3c>;
		reset-gpios = <&gpio2 22 GPIO_ACTIVE_HIGH>;
		solomon,width = <128>;
		solomon,height = <64>;
		solomon,com-invdir;
		solomon,page-offset = <0>;
		solomon,prechargep1 = <2>;
		solomon,prechargep2 = <8>;
	};

	button_ring@60 {
		compatible = "nxp,pca9632";
		#address-cells = <1>;
		#size-cells = <0>;
		reg = <0x60>;
		nxp,totem-pole;
		nxp,inverted-out;
		nxp,hw-blink;

		red@0 {
			label = "red:button_ring";
			reg = <0>;
			linux,default-trigger = "none";
		};

		green@1 {
			label = "green:button_ring";
			reg = <1>;
			linux,default-trigger = "default-on";
		};

		blue@2 {
			label = "blue:button_ring";
			reg = <2>;
			linux,default-trigger = "default-on";
		};

		unused@3 {
			label = "unused";
			reg = <3>;
			linux,default-trigger = "none";
		};
	};
};

&i2c3 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c3_pins_a>;
	status = "okay";
	clock-frequency = <50000>;
};

&pwm1 {
	status = "okay";
};

/* probably not needed */
&reg_5v0 {
	regulator-always-on;
};

&uart2 {
	status = "disabled";
};

&usbotg1 {
	dr_mode = "host";
};
